definitions:
  dto.DTOCreateOrder:
    properties:
      order_uid:
        type: string
    type: object
  dto.DTOGetOrder:
    properties:
      order:
        $ref: '#/definitions/models.OrderT'
    type: object
  dto.DTOGetOrders:
    properties:
      orders:
        items:
          $ref: '#/definitions/models.OrderT'
        type: array
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  models.DeliveryT:
    properties:
      address:
        type: string
      city:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      region:
        type: string
      zip:
        type: string
    type: object
  models.ItemT:
    properties:
      brand:
        type: string
      chrt_id:
        type: integer
      item_id:
        type: integer
      name:
        type: string
      nm_id:
        type: integer
      price:
        type: integer
      rid:
        type: string
      sale:
        type: integer
      size:
        type: string
      status:
        type: integer
      total_price:
        type: integer
      track_number:
        type: string
    type: object
  models.OrderT:
    properties:
      customer_id:
        type: string
      date_created:
        type: string
      delivery:
        $ref: '#/definitions/models.DeliveryT'
      delivery_service:
        type: string
      entry:
        type: string
      internal_signature:
        type: string
      items:
        items:
          $ref: '#/definitions/models.ItemT'
        type: array
      locale:
        type: string
      oof_shard:
        type: string
      order_uid:
        type: string
      payment:
        $ref: '#/definitions/models.PaymentT'
      shardkey:
        type: string
      sm_id:
        type: integer
      track_number:
        type: string
    type: object
  models.PaymentT:
    properties:
      amount:
        type: integer
      bank:
        type: string
      currency:
        type: string
      custom_fee:
        type: integer
      delivery_cost:
        type: integer
      goods_total:
        type: integer
      payment_dt:
        type: integer
      provider:
        type: string
      request_id:
        type: string
      transaction:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server
  title: App API
  version: "1.0"
paths:
  /api/orders/:
    get:
      description: Get All Orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DTOGetOrders'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: getOrder
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: Create a New Order
      parameters:
      - description: OrderInfo
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.OrderT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DTOCreateOrder'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: createOrder
      tags:
      - Order
  /api/orders/{order_uid}:
    get:
      description: Get All Orders
      parameters:
      - description: OrderUid
        in: path
        name: order_uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DTOGetOrder'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: getOrderByUid
      tags:
      - Order
  /api/publish:
    post:
      consumes:
      - application/json
      description: Publish message
      parameters:
      - description: Message content to publish
        in: body
        name: message
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: publishMsg
      tags:
      - Msg
swagger: "2.0"
